name: Create and publish a Docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v4
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
        env:
          DOCKER_METADATA_PR_HEAD_SHA: true

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  container-vuln-scan:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      issues: write     # allow open/close issues

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
        env:
          DOCKER_METADATA_PR_HEAD_SHA: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@v0.31.0
        id: runscanner
        continue-on-error: true
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          format: table
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
          output: vulnerabilities.table

      - name: Capture Trivy output
        id: capture
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "results<<$EOF" >> $GITHUB_OUTPUT
          echo "$(cat vulnerabilities.table 2>/dev/null || echo 'No vulnerabilities.table found')" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Post PR comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Container Scanning Status: ${{ steps.runscanner.outcome != 'success' && '❌ Failure' || '✅ Success' }}
            ```
            ${{ steps.capture.outputs.results }}
            ```
          edit-mode: replace

      - name: Open issue on main-branch failure
        if: ${{ steps.runscanner.outcome != 'success' && github.event_name != 'pull_request' }}
        uses: JasonEtco/create-an-issue@v2

